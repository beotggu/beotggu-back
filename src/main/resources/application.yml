
# 개발 환경 (H2 인메모리 DB 사용)
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:rainscene
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true

---
# 운영 환경 (MySQL 사용)
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://localhost:3306/rainscene_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: rainscene_user
    password: rainscene_pass
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: validate  # 운영 환경에서는 validate 모드 권장
    show-sql: false
    properties:
      hibernate:
        format_sql: true

---
# 도커 컴포즈 환경 (MySQL 컨테이너 사용)
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:mysql://mysql:3306/rainscene_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: rainscene_user
    password: rainscene_pass
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: validate
    show-sql: false

---
# 테스트 환경
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true